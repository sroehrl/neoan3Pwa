<?php
/* Generated by neoan3-cli */

namespace Neoan3\Component\Neoan3Pwa;

use Neoan3\Apps\Ops;
use Neoan3\Core\Unicore;

class Neoan3Pwacontroller extends Unicore
{
    function init()
    {

        switch (sub(1)) {
            case 'manifest':
                $this->getManifest();
                break;
            case 'serviceWorker':
                $this->getServiceWorker();
                break;
            default: $this->register();
        }
    }
    function register()
    {

        header('Content-Type: application/javascript');
        echo Ops::embraceFromFile('/component/neoan3Pwa/registerServiceworker.js',[
            'base' => base,
            'name' => sub(2)
        ]);
        exit();
    }
    function getManifest()
    {
        $manifest = [
            'name'      => sub(2),
            'short_name' => sub(2),
            'background_color' => '#1c1c1c',
            'icons' => [['src'=>base.'component/neoan3Pwa/n3.png','type'=>'image/png','sizes'=>'512x512']],
            'start_url' => base,
            'display'   => 'standalone',
            'scope'     => base
        ];
        header('Content-Type: application/json');
        echo json_encode($manifest, JSON_UNESCAPED_SLASHES);
        exit();
    }

    function getServiceWorker()
    {
        $info = ['routes' => base, 'name' => sub(2),'base'=>base];
        $siblingPath = path . '/component';
        $folders = scandir($siblingPath);
        $hashable = 'neoan3';
        foreach ($folders as $folder) {
            if($folder !== 'neoan3Pwa'){
                $containedFiles = scandir($siblingPath . '/' . $folder);
                foreach ($containedFiles as $containedFile){
                    if(strpos($containedFile, '.ctrl.php') !== false){
                        $class = '\\Neoan3\\Components\\' . Ops::toPascalCase($folder);
                        if (method_exists($class, 'init')) {
                            $hashable .= file_get_contents($siblingPath  . '/' . $folder . '/' . $containedFile);

                            $info['routes'] .= ',' . base . Ops::toKebabCase($folder) . '/';
                        }
                    } elseif (preg_match('/(\.html)|(\.js)/', $containedFile)){
                        $hashable .= file_get_contents(path . '/component/' . $folder . '/' . $containedFile);
                    }
                }
            }

        }
        $info['cacheName'] = md5($hashable);
        header('Service-Worker-Allowed: /');
        header('Content-Type: application/javascript');
        echo Ops::embraceFromFile('component/neoan3Pwa/serviceWorker.js', $info);
        exit();
    }


}
